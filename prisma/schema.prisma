// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// For postgres
// pnpm prisma migrate dev --name "init"

// For MongoDB
// pnpm prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  email          String    @unique
  hashedPassword String
  birthday       DateTime?
  bio            String?
  profilePicture String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  Post    Post[]
  Comment Comment[]
  Like    Like[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  post      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Comment Comment[]
  Like    Like[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comment   String

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
  Post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  postId    String   @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
  Post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}
